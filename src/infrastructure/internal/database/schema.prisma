// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema
// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider  = "postgresql"
    url       = env("DATABASE_URL")
    directUrl = env("DIRECT_URL")
}

model Tenant {
    id      Int     @id @default(autoincrement())
    name    String?
    address String?
    users   User[]
}

model User {
    id          Int         @id @default(autoincrement())
    firstName   String
    lastName    String
    phoneNumber String
    email       String      @unique
    password    String
    hasVerified Boolean     @default(false)
    role        Role
    tenantId    Int
    tenant      Tenant      @relation(fields: [tenantId], references: [id])
    tokens      UserToken[]
    instructor  Instructor?
    student     Student?
}

enum Role {
    PROPRIETOR
    PRINCIPAL
    VICE_PRINCIPAL
    ADMISSIONS_OFFICER
    INSTRUCTOR
    STUDENT
}

model Instructor {
    id             Int    @id @default(autoincrement())
    userId         Int    @unique
    subjectsTaught String
    user           User   @relation(fields: [userId], references: [id])
}

model Student {
    id             Int      @id @default(autoincrement())
    userId         Int      @unique
    gradeLevel     String
    enrollmentDate DateTime
    user           User     @relation(fields: [userId], references: [id])
}

model UserToken {
    id        Int       @id @default(autoincrement())
    userId    Int
    user      User      @relation(fields: [userId], references: [id])
    tokenType TokenType
    token     String
    expiresAt DateTime
    expired   Boolean   @default(false)
    isActive  Boolean   @default(true)
}

enum TokenType {
    EMAIL
    ACCESS
    REFRESH
}
