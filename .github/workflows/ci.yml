name: Continuous Integration

on:
  push:
    branches:
      - master
      - dev
  pull_request:
    branches:
      - master
      - dev

jobs:
  build:
    runs-on: ubuntu-latest

    # services:
    #   postgres:
    #     image: postgres:13
    #     env:
    #       POSTGRES_USER: prisma
    #       POSTGRES_PASSWORD: prisma
    #       POSTGRES_DB: dev_db
    #     ports:
    #       - 5432:5432

    steps:
      - name: 🔖 Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: 🌳 Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: 20

      - name: 🚀 Install pnpm
        run: npm install -g pnpm

      - name: 🛠️ Install dependencies
        run: pnpm install

      # - name: Wait for PostgreSQL to be ready
      #   run: |
      #     echo "Waiting for PostgreSQL to be ready..."
      #     while ! pg_isready -h localhost -p 5432 -U prisma; do
      #       sleep 1
      #     done

      # - name: Generate prisma client
      #   run: pnpm run prisma:generate

      # - name: Run prisma migrations
      #   env:
      #     DATABASE_URL: postgresql://prisma:prisma@localhost:5432/dev_db
      #     DIRECT_URL: postgresql://prisma:prisma@localhost:5432/dev_db
      #   run: pnpm run prisma:migrate

      - name: Run lint
        run: pnpm run lint

      - name: Run format check
        run: pnpm run format

      # - name: Run tests
      #   run: pnpm run test

      # - name: Check commit messages
      #   uses: wagoid/commitlint-github-action@v3
      #   with:
      #     configFile: commitlint.config.cjs

  deploy:
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/master'

    steps:
      - name: 🔖 Checkout repository
        uses: actions/checkout@v3

      - name: 📦 Set up SSH
        uses: webfactory/ssh-agent@v0.5.3
        with:
          ssh-private-key: ${{ secrets.AWS_EC2_SSH_KEY }}

      - name: 🚀 Deploy to Kenia Web Server
        run: |
          ssh -o StrictHostKeyChecking=no ${{ secrets.AWS_EC2_USER }}@${{ secrets.AWS_EC2_HOST }} << 'EOF'
            cd /home/ec2-user/apps/kenia/backend/src/scripts
            chmod +x deploy.sh
            ./deploy.sh
          EOF
